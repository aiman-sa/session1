{"version":3,"sources":["redux/constants/page.js","redux/actions/page.js","components/pokemon.js","components/search.js","components/page.js","containers/page.js","redux/reducers/page.js","redux/reducers/index.js","index.js","redux/store/configure-store.js"],"names":["GET_POKEMONS_REQUEST","GET_POKEMONS_SUCCESS","GET_POKEMONS_FAIL","SET_POKEMONS","FILTER_POKEMONS","setPokemons","data","pokemons","results","map","pokemon","url","id","substring","length","type","payload","filterPokemons","searchString","dispatch","getState","displayedPokemons","page","Pokemon","props","state","moreInfo","onMoreInfoClick","bind","this","pokemonId","self","fetch","then","ok","json","setState","types","name","typeH","img","typeCls","moves","className","style","marginLeft","toString","toUpperCase","alt","src","color","PureComponent","Search","onChange","class","role","placeholder","Page","getPokemons","event","currentTarget","value","isFetched","error","data-toggle","data-target","href","handleSearch","marginTop","Component","mapDispatchToProps","mockData","slice","pageActions","connect","initialState","combineReducers","action","filteredDisplayedPokemons","filter","includes","toLowerCase","store","middlewares","thunkMiddleware","composeEnhancers","compose","createStore","rootReducer","applyMiddleware","configureStore","render","document","getElementById"],"mappings":"sm+DAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAe,eACfC,EAAkB,kB,QCM/B,SAASC,EAAYC,GACnB,IAAMC,EAAWD,EAAKE,QAAQC,KAAI,SAAAC,GAAY,IACtCC,EAAQD,EAARC,IAGN,OAFAD,EAAQE,GAAKD,EAAIE,UAAU,GAAIF,EAAIG,OAAS,GAErCJ,KAGT,MAAO,CACLK,KAAMZ,EACNa,QAAST,GA4CN,SAASU,IAAmC,IAApBC,EAAmB,uDAAJ,GAC5C,OAAO,SAACC,EAAUC,GAChB,IAAIC,EAAoBD,IAAWE,KAAKf,SACxCY,EAAS,CACPJ,KAAMX,EACNY,QAAS,CACPK,oBACAH,mB,+CCYOK,E,kDAhFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,IAEZ,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBALN,E,sDAOnB,WACEC,KAAKF,oB,6BAEP,WACE,IAAIG,EAAYD,KAAKL,MAAMd,QAAQE,GAC/BmB,EAAOF,KACXG,MAAM,qCAAuCF,EAAY,KACtDG,MAAK,SAAA3B,GACJ,GAAIA,EAAK4B,GACP,OAAO5B,EAAK6B,UAGfF,MAAK,SAAA3B,GACJyB,EAAKK,SAAS,CACZV,SAAUpB,S,oBAKlB,WAAU,IACAI,EAAYmB,KAAKL,MAAjBd,QACJgB,EAAWG,KAAKJ,MAAMC,SACtBX,EACDW,GACCA,EAASW,OACTX,EAASW,MAAMvB,OAAS,GACxBY,EAASW,MAAM,GAAGtB,MAClBW,EAASW,MAAM,GAAGtB,KAAKuB,MACzB,MACEC,EACDb,GACCA,EAASW,OACTX,EAASW,MAAMvB,OAAS,GACxBY,EAASW,MAAM,GAAGtB,MAClBW,EAASW,MAAM,GAAGtB,KAAKuB,MACzB,MAEEE,EAAG,mFACL9B,EAAQE,GADH,QAGH6B,EAAU,mBAAqB1B,EAC/B2B,EAAQhB,GAAYA,EAASW,MAAQX,EAASgB,MAAQ,GAC1D,OACE,sBAAKC,UAAU,8BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAIA,UAAU,GAAd,UACGjC,EAAQ4B,KACT,wBAAOK,UAAU,GAAGC,MAAO,CAAEC,WAAY,OAAzC,UACa,QAAVN,EACGA,EAAMO,WAAWC,cACjBhC,EAAK+B,WAAWC,cAAe,IAHrC,gBAMA,uBAAMJ,UAAU,iCAAhB,cACIjC,EAAQE,WAIhB,qBAAK+B,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAsBK,IAAI,SAASC,IAAKT,MAEzD,qBAAKG,UAAU,eAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAWF,EAAjB,SAA2B1B,EAAK+B,WAAWC,gBAC3C,uBACA,uBAAMH,MAAO,CAAEM,MAAO,SAAtB,cAAmCR,EAAM5B,OAAzC,wB,GAzEUqC,iBCaPC,EAbA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,qBAAKC,MAAM,8BAAX,SACE,sBAAMA,MAAM,cAAcC,KAAK,SAA/B,SACE,uBACExC,KAAK,OACLsC,SAAUA,EACVV,UAAU,eACVa,YAAY,+BCwDLC,E,uKA5Db,WACE5B,KAAKL,MAAMkC,gB,0BAGb,SAAaC,GACX9B,KAAKL,MAAMP,eAAe0C,EAAMC,cAAcC,S,oBAGhD,WAAU,IAAD,EACuChC,KAAKL,MAA7CH,EADC,EACDA,kBAAmByC,EADlB,EACkBA,UAAWC,EAD7B,EAC6BA,MAEhCxD,EAAWc,EAAkBZ,KAAI,SAAAC,GACnC,OACE,qBAAKiC,UAAU,WAAf,SACE,cAAC,EAAD,CAASjC,QAASA,KADWA,EAAQE,OAM3C,OACE,gCACE,qBACE+B,UAAU,yCACVY,KAAK,aAFP,SAIE,sBAAKZ,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,yBACE5B,KAAK,SACL4B,UAAU,0BACVqB,cAAY,WACZC,cAAY,mBAJd,UAME,sBAAMtB,UAAU,UAAhB,+BACA,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,gBAElB,oBAAGuB,KAAK,IAAIvB,UAAU,eAAtB,UACE,qBAAKM,IAAI,WAAWD,IAAI,SAD1B,mBAKF,cAAC,EAAD,CAAQK,SAAUxB,KAAKsC,aAAavC,KAAKC,aAG7C,sBAAKc,UAAU,kBAAkBC,MAAO,CAAEwB,UAAW,OAArD,UACGL,GAAS,qBAAKpB,UAAU,cAAf,SAA8BoB,IACxC,qBAAKpB,UAAU,iBACdmB,EACC,wDAEA,qBAAKnB,UAAU,YAAf,SAA4BpC,c,GArDrB8D,aCcnB,IAAMC,EAAqB,CACzBZ,YJOK,WACL,OAAO,SAAAvC,GACLA,EAAS,CACPJ,KAAMf,IAGNmB,EAAS,CACPJ,KAAMd,IAERsE,EAAS/D,QAAU+D,EAAS/D,QAAQgE,MAAM,EAAG,IAC7CrD,EAASd,EAAYkE,IACrBpD,EAASF,OIjBbA,eAAgBwD,GAGHC,eAff,SAAyBjD,GAAQ,IAAD,EACkBA,EAAMH,KAEtD,MAAO,CACLD,kBAJ4B,EACtBA,kBAINyC,UAL4B,EACHA,UAKzBC,MAN4B,EACQA,SAgBtCO,EAFaI,CAGbjB,G,8BClBIkB,EAAe,CACnBb,WAAW,EACXC,MAAO,KACPxD,SAAU,GACVc,kBAAmB,ICTNuD,cAAgB,CAC7BtD,KDWa,WAAwC,IAA/BG,EAA8B,uDAAtBkD,EAAcE,EAAQ,uCACpD,OAAQA,EAAO9D,MACb,KAAKf,EACH,OAAO,2BACFyB,GADL,IAEEqC,WAAW,IAGf,KAAK7D,EACH,OAAO,2BACFwB,GADL,IAEEqC,WAAW,IAGf,KAAK5D,EACH,OAAO,2BACFuB,GADL,IAEEqC,WAAW,EACXC,MAAOc,EAAO7D,UAGlB,KAAKb,EACH,OAAO,2BACFsB,GADL,IAEElB,SAAUsE,EAAO7D,UAGrB,KAAKZ,EAAL,MAC8CyE,EAAO7D,QAA3CK,EADV,EACUA,kBAAmBH,EAD7B,EAC6BA,aACvB4D,EAA4BzD,EAAkB0D,QAAO,SAAArE,GACvD,OAAOA,EAAQ4B,KAAK0C,SAAS9D,EAAa+D,kBAE5C,OAAO,2BACFxD,GADL,IAEEJ,kBAAmByD,IAGvB,QACE,OAAOrD,ME9Cb,IAAMyD,ECFS,WAA4C,IAApBP,EAAmB,uDAAJ,GAC9CQ,EAAc,CAACC,KAEjBC,EAAmBC,IAWvB,OAAOC,YACLC,EACAb,EACAU,EAAiBI,IAAe,WAAf,EAAmBN,KDf1BO,GAEdC,iBACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFU,SAASC,eAAe,W","file":"static/js/main.cf9285c4.chunk.js","sourcesContent":["export const GET_POKEMONS_REQUEST = 'GET_POKEMONS_REQUEST'\r\nexport const GET_POKEMONS_SUCCESS = 'GET_POKEMONS_SUCCESS'\r\nexport const GET_POKEMONS_FAIL = 'GET_POKEMONS_FAIL'\r\nexport const SET_POKEMONS = 'SET_POKEMONS'\r\nexport const FILTER_POKEMONS = 'FILTER_POKEMONS'\r\n","import {\r\n  GET_POKEMONS_REQUEST,\r\n  GET_POKEMONS_SUCCESS,\r\n  GET_POKEMONS_FAIL,\r\n  SET_POKEMONS,\r\n  FILTER_POKEMONS\r\n} from '../constants/page'\r\nimport mockData from './data/mock'\r\nconst isMock = true\r\n\r\nfunction setPokemons(data) {\r\n  const pokemons = data.results.map(pokemon => {\r\n    let { url } = pokemon\r\n    pokemon.id = url.substring(34, url.length - 1)\r\n\r\n    return pokemon\r\n  })\r\n\r\n  return {\r\n    type: SET_POKEMONS,\r\n    payload: pokemons\r\n  }\r\n}\r\n/**\r\n * public function getPokemons - retrieve list of pokemons\r\n */\r\nexport function getPokemons() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_POKEMONS_REQUEST\r\n    })\r\n    if (isMock) {\r\n      dispatch({\r\n        type: GET_POKEMONS_SUCCESS\r\n      })\r\n      mockData.results = mockData.results.slice(0, 10)\r\n      dispatch(setPokemons(mockData))\r\n      dispatch(filterPokemons())\r\n    } else {\r\n      return fetch(`https://pokeapi.co/api/v2/pokemon/?limit=4&offset=1`)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json()\r\n          }\r\n\r\n          throw new Error(`${response.status}: ${response.statusText}`)\r\n        })\r\n        .then(data => {\r\n          dispatch({\r\n            type: GET_POKEMONS_SUCCESS\r\n          })\r\n          dispatch(setPokemons(data))\r\n          dispatch(filterPokemons())\r\n        })\r\n        .catch(error => {\r\n          dispatch({\r\n            type: GET_POKEMONS_FAIL,\r\n            payload: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\nexport function filterPokemons(searchString = '') {\r\n  return (dispatch, getState) => {\r\n    let displayedPokemons = getState().page.pokemons\r\n    dispatch({\r\n      type: FILTER_POKEMONS,\r\n      payload: {\r\n        displayedPokemons,\r\n        searchString\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react'\r\n\r\nclass Pokemon extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      moreInfo: {}\r\n    }\r\n    this.onMoreInfoClick = this.onMoreInfoClick.bind(this)\r\n  }\r\n  componentWillMount() {\r\n    this.onMoreInfoClick()\r\n  }\r\n  onMoreInfoClick() {\r\n    let pokemonId = this.props.pokemon.id\r\n    let self = this\r\n    fetch('https://pokeapi.co/api/v2/pokemon/' + pokemonId + '/')\r\n      .then(data => {\r\n        if (data.ok) {\r\n          return data.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        self.setState({\r\n          moreInfo: data\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { pokemon } = this.props\r\n    let moreInfo = this.state.moreInfo\r\n    let type =\r\n      (moreInfo &&\r\n        moreInfo.types &&\r\n        moreInfo.types.length > 0 &&\r\n        moreInfo.types[0].type &&\r\n        moreInfo.types[0].type.name) ||\r\n      'N/A'\r\n    let typeH =\r\n      (moreInfo &&\r\n        moreInfo.types &&\r\n        moreInfo.types.length > 1 &&\r\n        moreInfo.types[1].type &&\r\n        moreInfo.types[1].type.name) ||\r\n      'N/A'\r\n\r\n    let img = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n      pokemon.id\r\n    }.png`\r\n    let typeCls = 'label type type-' + type\r\n    let moves = moreInfo && moreInfo.types ? moreInfo.moves : []\r\n    return (\r\n      <div className=\"pokemon panel panel-primary\">\r\n        <div className=\"panel-heading\">\r\n          <h1 className=\"\">\r\n            {pokemon.name}\r\n            <small className=\"\" style={{ marginLeft: '5px' }}>\r\n              {typeH !== 'N/A'\r\n                ? typeH.toString().toUpperCase()\r\n                : type.toString().toUpperCase()}{' '}\r\n              Pok√©mon\r\n            </small>\r\n            <span className=\"label label-primary pull-right\">\r\n              #{pokemon.id}\r\n            </span>\r\n          </h1>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <img className=\"avatar center-block\" alt=\"avatar\" src={img} />\r\n        </div>\r\n        <div className=\"panel-footer\">\r\n          <div className=\"text-center\">\r\n            <span className={typeCls}>{type.toString().toUpperCase()}</span>\r\n            <br />\r\n            <span style={{ color: 'black' }}>#{moves.length} moves</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pokemon\r\n","import React from 'react'\r\n\r\nconst Search = ({ onChange }) => (\r\n  <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n    <form class=\"navbar-form\" role=\"search\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        className=\"form-control\"\r\n        placeholder=\"Enter pokemon name...\"\r\n      />\r\n    </form>\r\n  </div>\r\n)\r\n\r\nexport default Search\r\n","import React, { Component } from 'react'\r\nimport Pokemon from '../components/pokemon'\r\nimport Search from '../components/search'\r\n\r\nclass Page extends Component {\r\n  componentDidMount() {\r\n    this.props.getPokemons()\r\n  }\r\n\r\n  handleSearch(event) {\r\n    this.props.filterPokemons(event.currentTarget.value)\r\n  }\r\n\r\n  render() {\r\n    let { displayedPokemons, isFetched, error } = this.props\r\n\r\n    let pokemons = displayedPokemons.map(pokemon => {\r\n      return (\r\n        <div className=\"col-lg-3\" key={pokemon.id}>\r\n          <Pokemon pokemon={pokemon} />\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"navbar navbar-inverse navbar-fixed-top\"\r\n          role=\"navigation\"\r\n        >\r\n          <div className=\"container-fluid\">\r\n            <div className=\"navbar-header\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"navbar-toggle collapsed\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\".navbar-collapse\"\r\n              >\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n              </button>\r\n              <a href=\"/\" className=\"navbar-brand\">\r\n                <img src=\"logo.png\" alt=\"logo\" />\r\n                Pok√©dex\r\n              </a>\r\n            </div>\r\n            <Search onChange={this.handleSearch.bind(this)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\" style={{ marginTop: '5em' }}>\r\n          {error && <div className=\"page__error\">{error}</div>}\r\n          <div className=\"page__search\" />\r\n          {isFetched ? (\r\n            <p>Loading, please wait...</p>\r\n          ) : (\r\n            <div className=\"col-lg-12\">{pokemons}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Page\r\n","import { connect } from 'react-redux'\r\nimport * as pageActions from '../redux/actions/page'\r\nimport Page from '../components/page'\r\n\r\n/**\r\n * mapStateToProps\r\n * @param {*} state\r\n */\r\nfunction mapStateToProps(state) {\r\n  const { displayedPokemons, isFetched, error } = state.page\r\n\r\n  return {\r\n    displayedPokemons,\r\n    isFetched,\r\n    error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getPokemons: pageActions.getPokemons,\r\n  filterPokemons: pageActions.filterPokemons\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Page)\r\n","import {\r\n  GET_POKEMONS_REQUEST,\r\n  GET_POKEMONS_SUCCESS,\r\n  GET_POKEMONS_FAIL,\r\n  SET_POKEMONS,\r\n  FILTER_POKEMONS\r\n} from '../constants/page'\r\n\r\nconst initialState = {\r\n  isFetched: false,\r\n  error: null,\r\n  pokemons: [],\r\n  displayedPokemons: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POKEMONS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetched: true\r\n      }\r\n\r\n    case GET_POKEMONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetched: false\r\n      }\r\n\r\n    case GET_POKEMONS_FAIL:\r\n      return {\r\n        ...state,\r\n        isFetched: false,\r\n        error: action.payload\r\n      }\r\n\r\n    case SET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload\r\n      }\r\n\r\n    case FILTER_POKEMONS:\r\n      const { displayedPokemons, searchString } = action.payload\r\n      let filteredDisplayedPokemons = displayedPokemons.filter(pokemon => {\r\n        return pokemon.name.includes(searchString.toLowerCase())\r\n      })\r\n      return {\r\n        ...state,\r\n        displayedPokemons: filteredDisplayedPokemons\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport page from './page'\r\n\r\nexport default combineReducers({\r\n  page\r\n})\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport Page from './containers/page'\r\nimport './style/main.css'\r\nimport configureStore from './redux/store/configure-store'\r\n\r\nconst store = configureStore()\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <Page />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n// import { createLogger } from 'redux-logger'\r\nimport rootReducer from '../reducers'\r\n\r\nexport default function configureStore(initialState = {}) {\r\n  const middlewares = [thunkMiddleware]\r\n\r\n  let composeEnhancers = compose\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    if ('__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' in window) {\r\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    }\r\n\r\n    //const loggerMiddleware = createLogger()\r\n    //middlewares.push(loggerMiddleware)\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  )\r\n}\r\n"],"sourceRoot":""}